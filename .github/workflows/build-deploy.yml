name: Build and deploy code

on:
  push:
    branches: ["main"]
  pull_request: 
    branches: ["main"]

jobs:
  build:
    environment: # Reference the environment created at the github repo, contains the secrets for env
      name: env_build_deploy
    env: 
          DB_HOSTNAME: ${{secrets.DB_HOSTNAME}}
          DB_PORT: ${{secrets.DB_PORT}} 
          DB_NAME: ${{secrets.DB_NAME}} 
          DB_USERNAME: ${{secrets.DB_USERNAME}} 
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}        
          SECRET_KEY: ${{secrets.SECRET_KEY}}
          ALGORITHM: ${{secrets.ALGORITHM}}
          ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env: 
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB: ${{secrets.DB_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3

      - name: install python version 3.10.1
        uses: actions/setup-python@v3
        with: 
          python-version: "3.10.1"

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install all dependencies
        run: pip install -r requirements.txt

      - name: run tests with pytest
        run: |
          pip install pytest
          pytest

      - name: Login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_HUB_USER_NAME}} 
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      
      - name: Set up docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push to DockerHub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{steps.buildx.outputs.name}}
          push: true
          tags: ${{secrets.DOCKER_HUB_USER_NAME}}/fastapi-proj:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{steps.docker_build.outputs.digest}}

  deploy:
    environment: # Reference the environment created at the github repo, contains the secrets for env
      name: production
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: deploy to heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}